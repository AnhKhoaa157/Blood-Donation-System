import React, { useEffect, useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import Button from "@/components/ui/button";
import Input from "@/components/ui/input";
import { Bell, PlusCircle } from "lucide-react";
import { motion } from "framer-motion";
import { format } from "date-fns";
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import "./Home.css";
import AppLayout from "../../Layouts/AppLayout";
import Footer from "../Footers/Footer";
{/* Import DateRangePicker */}
import MyDateRangePicker from "./HomeSearchs/MyDateRangePicker";

/* Import image cho slider */
import slideshow1 from "../../assets/images/slideshows/slideshow1.png";

const Home = () => {
  // State qu·∫£n l√Ω kho·∫£ng ng√†y ƒë∆∞·ª£c ch·ªçn (startDate, endDate)
  const [dateRange, setDateRange] = useState(null);

  // D·ªØ li·ªáu b√†i vi·∫øt g·ªëc
  const [posts, setPosts] = useState([]);

  // B√†i vi·∫øt sau khi l·ªçc theo t√¨m ki·∫øm
  const [filteredPosts, setFilteredPosts] = useState([]);

  // Hi·ªán th√¥ng b√°o
  const [showNotification, setShowNotification] = useState(false);

  // Gi√° tr·ªã nh·∫≠p ƒë·ªãa ƒëi·ªÉm t√¨m ki·∫øm
  const [searchLocation, setSearchLocation] = useState("");

  const [submitted, setSubmitted] = useState(false);

  const [results, setResults] = useState([]);


  useEffect(() => {
    const mockPosts = [
      {
        id: 1,
        title: "H√†nh tr√¨nh hi·∫øn m√°u ƒë·∫ßy c·∫£m x√∫c",
        image: "/images/post1.jpg",
        content:
          "C·∫£m ∆°n c√°c b·∫°n ƒë√£ tham gia ng√†y h·ªôi hi·∫øn m√°u t·∫°i TP. HCM, g√≥p ph·∫ßn c·ª©u s·ªëng nhi·ªÅu b·ªánh nh√¢n.",
        date: "2025-05-01",
        location: "TP. HCM",
      },
      {
        id: 2,
        title: "K·ª∑ ni·ªám 100 ƒë∆°n v·ªã m√°u ƒë·∫ßu ti√™n",
        image: "/images/post2.jpg",
        content:
          "Ch√∫ng t√¥i ƒë√£ ti·∫øp nh·∫≠n h∆°n 100 ƒë∆°n v·ªã m√°u trong chi·∫øn d·ªãch v·ª´a qua, r·∫•t c·∫£m ƒë·ªông v√† ƒë√°ng t·ª± h√†o.",
        date: "2025-05-15",
        location: "H√† N·ªôi",
      },
    ];
    setPosts(mockPosts);
    setFilteredPosts(mockPosts);
    setShowNotification(true);
  }, []);

  // H√†m x·ª≠ l√Ω khi b·∫•m n√∫t T√¨m ki·∫øm
  const handleSearch = () => {
    let results = posts;
  
    if (dateRange && dateRange.startDate && dateRange.endDate) {
      const fromDate = new Date(dateRange.startDate);
      const toDate = new Date(dateRange.endDate);
      results = results.filter((post) => {
        const postDate = new Date(post.date);
        return postDate >= fromDate && postDate <= toDate;
      });
    }
  
    if (searchLocation.trim() !== "") {
      const keyword = searchLocation.toLowerCase();
      results = results.filter(
        (post) =>
          post.title.toLowerCase().includes(keyword) ||
          post.content.toLowerCase().includes(keyword) ||
          (post.location && post.location.toLowerCase().includes(keyword))
      );
    }
  
    setFilteredPosts(results);
    setResults(results); // ‚ö†Ô∏è B·∫†N ƒê√É THI·∫æU D√íNG N√ÄY
    setSubmitted(true);  // ‚ö†Ô∏è C·∫≠p nh·∫≠t ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o k·∫øt qu·∫£
  
    alert(
      `T√¨m l·ªãch ƒë·∫∑t t·ª´ ${
        dateRange?.startDate
          ? format(new Date(dateRange.startDate), "dd/MM/yyyy")
          : "..."
      } ƒë·∫øn ${
        dateRange?.endDate
          ? format(new Date(dateRange.endDate), "dd/MM/yyyy")
          : "..."
      }\nT√¨m ƒë∆∞·ª£c ${results.length} b√†i vi·∫øt ph√π h·ª£p.`
    );
  };

  const sliderSettings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    autoplay: true,
    autoplaySpeed: 3000,
    arrows: false,
  };

  return (
    <>
      <AppLayout />
      <div className="container">
        {/* Notification */}
        {showNotification && (
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            className="notification"
          >
            <Bell />
            C√≥ b√†i vi·∫øt m·ªõi t·ª´ c·ªông ƒë·ªìng hi·∫øn m√°u!
          </motion.div>
        )}

        {/* Hero section */}
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.5 }}
          className="hero-section"
        >
          <h1 className="hero-title">
            Ch√†o m·ª´ng ƒë·∫øn v·ªõi H·ªá th·ªëng H·ªó tr·ª£ Hi·∫øn M√°u
          </h1>
          <p className="hero-subtitle">
            C√πng nhau lan t·ªèa y√™u th∆∞∆°ng, s·∫ª chia s·ª± s·ªëng.
          </p>
          <p className="hero-description">
            Website H·ªó tr·ª£ Hi·∫øn M√°u l√† n·ªÅn t·∫£ng k·∫øt n·ªëi gi·ªØa nh·ªØng t·∫•m l√≤ng nh√¢n √°i v·ªõi c√°c trung t√¢m y t·∫ø tr√™n to√†n qu·ªëc. 
            Ch√∫ng t√¥i cung c·∫•p th√¥ng tin minh b·∫°ch, c·∫≠p nh·∫≠t v·ªÅ c√°c s·ª± ki·ªán hi·∫øn m√°u, gi√∫p b·∫°n d·ªÖ d√†ng ƒëƒÉng k√Ω, t√¨m ki·∫øm l·ªãch hi·∫øn m√°u ph√π h·ª£p, 
            c≈©ng nh∆∞ chia s·∫ª c√¢u chuy·ªán ƒë·∫ßy c·∫£m x√∫c t·ª´ c·ªông ƒë·ªìng. C√πng nhau, ch√∫ng ta lan t·ªèa s·ª± s·ªëng v√† nh√¢n vƒÉn ƒë·∫øn t·ª´ng nh·ªãp tim.
          </p>
        </motion.div>

        {/* Slider */}
        <div className="slider-wrapper">
          <Slider {...sliderSettings}>
            <img src={slideshow1} alt="banner1" className="slider-image" />
            <img src="/images/banner2.jpg" alt="banner2" className="slider-image" />
          </Slider>
        </div>

        {/* Info boxes */}
        <div className="info-boxes">
          <Card className="card mission">
            <CardContent>
              <h3 className="card-title">S·ª© m·ªánh c·ªßa ch√∫ng t√¥i</h3>
              <p>
                H·ªó tr·ª£ k·∫øt n·ªëi ng∆∞·ªùi hi·∫øn m√°u v·ªõi c√°c trung t√¢m y t·∫ø, lan t·ªèa
                gi√° tr·ªã nh√¢n vƒÉn.
              </p>
            </CardContent>
          </Card>

          <Card className="card benefit">
            <CardContent>
              <h3 className="card-title">L·ª£i √≠ch khi tham gia</h3>
              <p>
                Nh·∫≠n th√¥ng b√°o nhanh, theo d√µi l·ªãch hi·∫øn m√°u, v√† g√≥p ph·∫ßn c·ª©u
                s·ªëng nhi·ªÅu ng∆∞·ªùi.
              </p>
            </CardContent>
          </Card>

          <Card className="card activities">
            <CardContent>
              <h3 className="card-title">C√°c ho·∫°t ƒë·ªông n·ªïi b·∫≠t</h3>
              <p>
                Ng√†y h·ªôi hi·∫øn m√°u, chia s·∫ª c√¢u chuy·ªán, v√† c√°c ch∆∞∆°ng tr√¨nh
                khuy·∫øn kh√≠ch c·ªông ƒë·ªìng.
              </p>
            </CardContent>
          </Card>
        </div>

        {/* Video Section */}
        <section className="video-section">
          <h2 className="section-title">Video truy·ªÅn c·∫£m h·ª©ng</h2>
          <div className="video-wrapper">
            <iframe
              width="100%"
              height="400"
              src="https://www.youtube.com/embed/bxjZ511ChKY"
              title="Video k√™u g·ªçi hi·∫øn m√°u"
              frameBorder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
            ></iframe>
          </div>
        </section>

        {/* Search section */}
        <div className="p-6">
          <Card className="search-card">
            <CardContent>
              <h2 className="text-xl font-semibold mb-4">T√¨m ki·∫øm l·ªãch ƒë·∫∑t</h2>
              <div className="flex flex-col gap-4">
                <MyDateRangePicker onChange={(range) => setDateRange(range)} />

                <Input
                  placeholder="Nh·∫≠p t√™n ƒë·ªãa ƒëi·ªÉm ho·∫∑c t·ª´ kh√≥a..."
                  value={searchLocation}
                  onChange={(e) => setSearchLocation(e.target.value)}
                  className="search-input"
                />

                <Button onClick={handleSearch} className="search-button">
                  T√¨m ki·∫øm
                </Button>

                {/* TH√îNG B√ÅO */}
                {submitted && (
                  <div
                    className={`mt-2 p-3 rounded text-sm ${
                      results.length > 0
                        ? "bg-green-100 text-green-700"
                        : "bg-red-100 text-red-700"
                    }`}
                  >
                    {results.length > 0
                      ? `üîç ƒê√£ t√¨m th·∫•y ${results.length} l·ªãch ƒë·∫∑t ph√π h·ª£p.`
                      : "‚ùå Kh√¥ng t√¨m th·∫•y l·ªãch ƒë·∫∑t n√†o ph√π h·ª£p."}
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
          {/* K·∫æT QU·∫¢ HI·ªÇN TH·ªä */}
          <div className="results-section">
            {results.map((item) => (
              <Card key={item.id} className="result-card">
                <CardContent>
                  <h3 className="result-title">{item.title}</h3>
                  <p className="result-location">ƒê·ªãa ƒëi·ªÉm: {item.location}</p>
                  <p className="result-date">
                    Ng√†y: {format(new Date(item.date), "dd/MM/yyyy")}
                  </p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* FAQ Section */}
        <section className="faq-section">
          <h2 className="section-title">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
          <div className="faq-item">
            <h4 className="faq-question">Ai c√≥ th·ªÉ tham gia hi·∫øn m√°u?</h4>
            <p className="faq-answer">
              B·∫•t k·ª≥ ai t·ª´ 18 ƒë·∫øn 60 tu·ªïi, c√≥ s·ª©c kh·ªèe t·ªët v√† kh√¥ng m·∫Øc c√°c b·ªánh truy·ªÅn nhi·ªÖm ƒë·ªÅu c√≥ th·ªÉ tham gia hi·∫øn m√°u.
            </p>
          </div>
          <div className="faq-item">
            <h4 className="faq-question">T√¥i c√≥ ƒë∆∞·ª£c nh·∫≠n gi·∫•y ch·ª©ng nh·∫≠n kh√¥ng?</h4>
            <p className="faq-answer">
              C√≥. Sau khi hi·∫øn m√°u, b·∫°n s·∫Ω ƒë∆∞·ª£c c·∫•p gi·∫•y ch·ª©ng nh·∫≠n hi·∫øn m√°u t√¨nh nguy·ªán.
            </p>
          </div>
        </section>

        {/* Quick Stats Section */}
        <div className="quick-stats">
          <Card className="stat-card">
            <CardContent>
              <h3 className="stat-value">1,254+</h3>
              <p className="stat-label">Ng∆∞·ªùi tham gia</p>
            </CardContent>
          </Card>
          <Card className="stat-card">
            <CardContent>
              <h3 className="stat-value">3,785</h3>
              <p className="stat-label">ƒê∆°n v·ªã m√°u ti·∫øp nh·∫≠n</p>
            </CardContent>
          </Card>
          <Card className="stat-card">
            <CardContent>
              <h3 className="stat-value">52</h3>
              <p className="stat-label">Trung t√¢m y t·∫ø li√™n k·∫øt</p>
            </CardContent>
          </Card>
        </div>

        {/* Blood Donor Stories */}
        <section className="donor-stories">
          <h2 className="section-title">C√¢u chuy·ªán ng∆∞·ªùi hi·∫øn m√°u</h2>
          <Slider {...sliderSettings}>
            <div className="story-slide">
              <p>"T√¥i t·ª´ng c·∫ßn m√°u ƒë·ªÉ c·ª©u s·ªëng ng∆∞·ªùi th√¢n. Gi·ªù ƒë√¢y t√¥i mu·ªën ƒë·ªÅn ƒë√°p l·∫°i."</p>
              <strong>- Nguy·ªÖn VƒÉn Minh</strong>
            </div>
            <div className="story-slide">
              <p>"M·ªói l·∫ßn hi·∫øn m√°u l√† m·ªôt l·∫ßn t√¥i c·∫£m th·∫•y m√¨nh s·ªëng c√≥ √Ω nghƒ©a h∆°n."</p>
              <strong>- Tr·∫ßn Th·ªã H·ªìng</strong>
            </div>
          </Slider>
        </section>

        {/* Community posts */}
        <section>
          <div className="posts-header">
            <h2 className="section-title">B√†i vi·∫øt c·ªông ƒë·ªìng</h2>
            <Button variant="outline" className="add-post-button">
              <PlusCircle size={18} /> Th√™m b√†i vi·∫øt
            </Button>
          </div>

          <div className="posts-grid">
            {(filteredPosts.length > 0 ? filteredPosts : posts).map((post) => (
              <Card key={post.id} className="post-card">
                <img src={post.image} alt={post.title} className="post-image" />
                <CardContent className="post-content">
                  <h3 className="post-title">{post.title}</h3>
                  <p className="post-text">{post.content}</p>
                  <p className="post-date">
                    Ng√†y ƒëƒÉng: {format(new Date(post.date), "dd/MM/yyyy")}
                  </p>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
      </div>

      <Footer />
    </>
  );
};

export default Home;
